@use 'variables' as *;

// The side-content is composed of a 'preview' section which is a fixed height, and then 'layers', 'palette', and
// 'unicode' sections, each taking up 1/3 of the remaining height.
#side-content {
  min-width: $right-col-width;
  margin: $tiny-spacing $main-spacing $tiny-spacing $main-spacing;

  display: flex;
  flex-direction: column;

  // Each side-content-flex-section takes up an equal height of the side-content
  .side-content-flex-section {
    flex: 1; // fill equal parts of the remaining space
    overflow-y: hidden;

    display: flex;
    flex-direction: column;
  }

  > div:not(:last-child):not(.minimized) {
    margin-bottom: 1rem;
  }

  .component-toggle-header {
    display: flex;
    justify-content: center;
    align-items: center;
    width: auto;
    padding: 0;
    color: var(--color-font-muted);

    // Making header button smaller than normal button (in terms of height) so that the button is basically the same
    // size as its text. Doing this because we aren't showing a hover effect, so the padding is not really visible.
    // Have to increase the button's margin so that the overall size is the same as a normal button.
    // Giving button a negative left margin because the minimize/maximize caret is quite small, so we can shift left.
    $header-button-size: 20px;
    $header-button-margin: calc(($button-size + $button-spacing * 2 - $header-button-size) / 2);
    height: $header-button-size;
    margin: $header-button-margin 0 $header-button-margin -2px;

    .ri {
      font-size: 0.875rem;
    }

    &:hover {
      background: none;
    }
  }

  .tools {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;

    //margin-right: $scrollbar-width;

    > div {
      display: flex;
      flex-direction: row;
      align-items: center;
    }
  }

  .list {
    max-width: $right-col-width;
    flex: 1;

    // Fix for double sidebar when using flexbox
    // https://github.com/Grsmto/simplebar/issues/473#issuecomment-653741529
    overflow-y: auto;
    height: 100%;

    .simplebar-content {
      display: flex;
      flex-direction: column;
    }
    .simplebar-track.simplebar-vertical {
      background-color: var(--color-background-border);
    }

    &.as-rows {
      .simplebar-content {
        flex-direction: row;
        flex-wrap: wrap;
      }
    }

    .empty-list {
      font-style: italic;
      color: var(--color-font-muted);
      font-size: 0.875rem;
    }
  }


  // Showing/hiding the entire sidebar:
  #maximize-side-content {
    display: none;
  }

  &.minimized {
    min-width: auto;
    margin-right: $tiny-spacing;
    margin-left: 0;
    margin-bottom: $tiny-spacing;
    justify-content: end;

    > div {
      display: none;
    }
    > #maximize-side-content {
      display: flex;
      margin-bottom: 0;
    }
  }

}


#preview-container {
  .tools {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  #preview-canvas-container {
    position: relative;
    height: $preview-size;
    width: $preview-size;

    background: var(--color-canvas-bg);
    outline: 1px solid var(--color-background-border);
  }

  #preview-controls {
    display: flex;
  }

  #preview-fps-container {
    flex: 1;

    display: flex;
    align-items: center;
    background: var(--color-background);

    #preview-fps-value {
      font-size: 0.875rem;
      margin-left: 0.5rem;
      min-width: 3rem;
      display: flex;
      justify-content: center;
    }
    #preview-fps-slider {
      flex: 1;
      margin: 0.5rem;
    }
  }
}

#layer-controller {
  .layer {
    display: flex;
    justify-content: space-between;
    align-items: center;

    max-width: $right-col-width - $scrollbar-width;
    padding: 2px 2px 2px 6px;

    background: var(--color-surface);
    border: 2px solid transparent;
    box-sizing: border-box;

    font-size: 0.875rem;
    cursor: pointer;

    &:not(:last-child) {
      border-bottom: 2px solid var(--color-background);
    }

    &.selected {
      border-color: var(--color-primary);
    }

    &.layer-template {
      display: none;
    }

    &.placeholder {
      background: var(--color-surface);
      border: $frame-border-size dashed var(--color-primary);
      height: 1.5rem;
    }

    button {
      margin: 0;
      padding-bottom: 0;

      height: 20px;

      .ri {
        font-size: 1rem;
      }

      &:hover {
        background: none;
      }
    }
  }
}

#palette-controller {
  .list {
    .color {
      display: inline-block;
      width: $palette-icon-size;
      height: $palette-icon-size;
      margin-right: $palette-icon-spacing;
      margin-bottom: $palette-icon-spacing;
      cursor: pointer;
      border: 1px solid var(--color-well-bg);

      &:hover {
        border: 1px solid var(--color-primary);
      }

      // Make a small triangle in the top-left corner of the square
      &.selected {
        position: relative;

        &::before, &::after {
          content: '';
          position: absolute;
          border-color: transparent;
          border-style: solid;
        }

        &::before {
          top: 0;
          left: 0;

          border-width: $palette-triangle-size;
          border-left-color: var(--color-primary);
          border-top-color: var(--color-primary);
        }

        &::after {
          top: 2px;
          left: 2px;

          border-width: $palette-triangle-size - 3.5px;
          border-left-color: var(--color-surface);
          border-top-color: var(--color-surface);
        }
      }
    }
  }
}

#unicode-controller {
  .list {
    .unicode-option {
      height: $unicode-icon-size;
      width: $unicode-icon-size;
      font-size: 1.25rem;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;

      background: var(--color-surface);

      border: 1px solid var(--color-background);

      &:active {
        border: 1px solid var(--color-background);
      }

      &:hover {
        border: 1px solid var(--color-primary);
      }

      // Make a small triangle in the top-left corner of the square
      &.selected {
        position: relative;

        &::before, &::after {
          content: '';
          position: absolute;
          border-color: transparent;
          border-style: solid;
        }

        &::before {
          top: 0;
          left: 0;

          border-width: $unicode-triangle-size;
          border-left-color: var(--color-primary);
          border-top-color: var(--color-primary);
        }

        &::after {
          top: 2px;
          left: 2px;

          border-width: $unicode-triangle-size - 3.5px;
          border-left-color: var(--color-surface);
          border-top-color: var(--color-surface);
        }
      }
    }
  }
}

#sidebar-details {
  display: flex;
  flex-direction: row;
  justify-content: space-between;

  margin-top: auto; // forces details to always be at bottom of page, even if all other sections are minimized
}